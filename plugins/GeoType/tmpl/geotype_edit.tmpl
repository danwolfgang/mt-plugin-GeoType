<script type="text/javascript">
var saved_loc = new Array();
<TMPL_LOOP NAME=SAVED_LOCATIONS_LOOP>
 	loc = new Object();
	loc.value = "<TMPL_VAR NAME=LOCATION_VALUE>";
	loc.name = "<TMPL_VAR NAME=LOCATION_NAME>";
	saved_loc.push(loc);
</TMPL_LOOP>
var numGeo = <TMPL_VAR NAME="LOCATION_NUM">+1;
if (numGeo >= 5) {
	document.getElementById("add_loc_button").disabled = true;
}
function make_geocode() {
	numGeo++;
	var targetTable = document.getElementById("geocode_fields"); // target the tbody
	
	inp = document.createElement("input");
	inp.setAttribute("type", "hidden");
	inp.setAttribute("name", "geotype_location_id");
	inp.setAttribute("value", numGeo);
	targetTable.appendChild(inp);
	
	
	tr = document.createElement("tr");
	th = document.createElement("th");
	th.setAttribute("align", "left");
	th.appendChild(document.createTextNode("Name"));
	tr.appendChild(th);
	
	td = document.createElement("td");
	td.setAttribute("rowspan", 5);
	a = document.createElement("a");
	a.setAttribute("id", "geocode_this_" + numGeo);
	a.setAttribute("href", "javascript:void(0)");
	if (window.addEventListener) {
		a.addEventListener("click", function() {
			num = this.id.match(/(\d)/);
			num = num[0];
			geocode(num, 'geotype_addr_' + num, 'geotype_geometry_' + num);
			return false;
		}, true);		
	} else {
		a.attachEvent("onclick", function() {
			num = this.id.match(/(\d)/);
			num = num[0];
			geocode(num, 'geotype_addr_' + num, 'geotype_geometry_' + num);
			return false;
		});
	}
	a.setAttribute("title", "Geocode this address");
	a.appendChild(document.createTextNode("Geocode"));
	td.appendChild(a);
	tr.appendChild(td);
	targetTable.appendChild(tr);
	
	tr = document.createElement("tr");
	td = document.createElement("td");
	inp = document.createElement("input");
	inp.setAttribute("type", "text");
	inp.setAttribute("name", "geotype_locname_" + numGeo);
	inp.setAttribute("id", "geotype_locname_" + numGeo);
	inp.setAttribute("maxlength", 255);
	inp.style.width = "316px";
	td.appendChild(inp);
	tr.appendChild(td);
	targetTable.appendChild(tr);
	
	tr = document.createElement("tr");
	th = document.createElement("th");
	th.setAttribute("align", "left");
	th.appendChild(document.createTextNode("Address"));
	tr.appendChild(th);
	targetTable.appendChild(tr);
	
	tr = document.createElement("tr");
	td = document.createElement("td");
	inp = document.createElement("input");
	inp.setAttribute("type", "text");
	inp.setAttribute("name", "geotype_addr_" + numGeo);
	inp.setAttribute("id", "geotype_addr_" + numGeo);
	inp.setAttribute("maxlength", 255);
	inp.style.width = "316px";
	td.appendChild(inp);
	tr.appendChild(td);
	targetTable.appendChild(tr);
	
	tr = document.createElement("tr");
	td = document.createElement("td");
	td.appendChild(document.createTextNode("Lat/Long: "));

	span = document.createElement("span");
	span.setAttribute("id", "geotype_lat_long_" + numGeo);
	td.appendChild(span);
	inp = document.createElement("input");
	inp.setAttribute("type", "hidden");
	inp.setAttribute("name", "geotype_geometry_" + numGeo);
	inp.setAttribute("id", "geotype_geometry_" + numGeo);
	td.appendChild(inp);
	tr.appendChild(td);
	targetTable.appendChild(tr);
	
	tr = document.createElement("tr");
	th = document.createElement("th");
	th.setAttribute("align", "left");
	th.appendChild(document.createTextNode("Saved Locations"));
	tr.appendChild(th);
	targetTable.appendChild(tr);
	
	tr = document.createElement("tr");
	td = document.createElement("td");
	sel = document.createElement("select");
	sel.setAttribute("id", "geotype_select_" + numGeo);
	if (window.addEventListener) {
		sel.addEventListener("change", function() {
				num = this.id.match(/(\d)/);
				num = num[0];
				load_saved(parseInt(num));
			}, true);
	} else {
		sel.attachEvent("onchange", function() {
				num = this.id.match(/(\d)/);
				num = num[0];
				load_saved(parseInt(num));
			});
	}
	opt = document.createElement("option");
	opt.appendChild(document.createTextNode("--choose one--"));
	sel.appendChild(opt);
	
	for (i=0;i<saved_loc.length;i++) {
		opt = document.createElement("option");
		opt.setAttribute("value", saved_loc[i].value);
		opt.appendChild(document.createTextNode(saved_loc[i].name));
		sel.appendChild(opt);
	}
	td.appendChild(sel);
	tr.appendChild(td);
	targetTable.appendChild(tr);
	if (numGeo >= 5) {
		document.getElementById("add_loc_button").disabled = true;
	}
}

</script>
<div class="field">
    <div class="field-header"><label>Location</label></div>
    <div class="field-wrapper">
		<table width="100%" cellpadding="3" cellspacing="3">
			<tbody  id="geocode_fields">
			    <TMPL_LOOP NAME=LOCATION_LOOP>
			    <input type="hidden" name="geotype_location_id_<TMPL_VAR NAME=LOCATION_ORD>" value="<TMPL_VAR NAME=LOCATION_ID ESCAPE=HTML>" />
			    <tr>
			        <th align="left">Name</th>
			        <td rowspan="5"><a href='#' onclick="geocode(<TMPL_VAR NAME=LOCATION_ORD>, 'geotype_addr_<TMPL_VAR NAME=LOCATION_ORD>', 'geotype_geometry_<TMPL_VAR NAME=LOCATION_ORD>');return false;" title='Geocode this address' id='geocode'>Geocode</a></td>
			    </tr>
			    <tr>
			        <td><input type="text" name="geotype_locname_<TMPL_VAR NAME=LOCATION_ORD>" id="geotype_locname_<TMPL_VAR NAME=LOCATION_ORD>" value="<TMPL_VAR NAME=LOCATION_NAME ESCAPE=HTML>" maxlength="255" style="width: 316px"/></td>
				</tr>
				<tr>
				    <th align="left">Address</th>
				</tr>
				<tr>
				    <td><input type="text" name="geotype_addr_<TMPL_VAR NAME=LOCATION_ORD>" id="geotype_addr_<TMPL_VAR NAME=LOCATION_ORD>" value="<TMPL_VAR NAME=LOCATION_ADDR ESCAPE=HTML>" maxlength="255" style="width: 316px"/></td>
				</tr>
				<tr>
				    <td>Lat/Long: <span id="geotype_lat_long_<TMPL_VAR NAME=LOCATION_ORD>"><TMPL_VAR NAME=LOCATION_GEOMETRY></span><input type="hidden" name="geotype_geometry_<TMPL_VAR NAME=LOCATION_ORD>" id="geotype_geometry_<TMPL_VAR NAME=LOCATION_ORD>" value="<TMPL_VAR NAME=LOCATION_GEOMETRY ESCAPE=HTML>" /></td>
				</tr>
				<tr>
					<th scope="col" align=left>Saved Locations</th>
				</tr>
				<tr>
					<td><label for="geotype_select_<TMPL_VAR NAME=LOCATION_ORD>"> 
					    <select id="geotype_select_<TMPL_VAR NAME=LOCATION_ORD>" onchange="load_saved(<TMPL_VAR NAME=LOCATION_ORD>);"><option value="">--choose one--</option>
					        <TMPL_LOOP NAME=SAVED_LOCATIONS_LOOP>
					        <option value="<TMPL_VAR NAME=LOCATION_VALUE>"><TMPL_VAR NAME=LOCATION_NAME></option>
					        </TMPL_LOOP>
					    </select>
					</td>
				</tr>
				</TMPL_LOOP>
			</tbody>
			</table>
			<button id="add_loc_button" onClick="make_geocode(); return false;">Add Location...</button>
			<p>
				<table width="30%" cellpadding="3" cellspacing="3" id="map_table">
                    <!-- <thead>

                        <tr>
                            <th scope="col" align=left>Saved Locations</th>

                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><label for="geotype_select"> 
                                <select id="geotype_select" onchange="load_saved();"><option value="">--choose one--</option>
                                    <TMPL_LOOP NAME=SAVED_LOCATIONS_LOOP>
                                    <option value="<TMPL_VAR NAME=LOCATION_VALUE>"><TMPL_VAR NAME=LOCATION_NAME></option>
                                    </TMPL_LOOP>
                                </select>
                            </td>
                        </tr> -->
						<tr><td width=20%> <a href="#" onclick="geotype_resetMap();return false;" title="Zoom out and center map" id="geocode">Reset Map</a></td></tr>
                    <!-- </tbody> -->
				</table><div id="geo_map" style="width: <TMPL_VAR NAME=MAP_WIDTH>px; height: <TMPL_VAR NAME=MAP_HEIGHT>px; "></div>
				<script type="text/javascript"> //<![CDATA[ 

var map;
var marker_1, marker_2, marker_3, marker_4, marker_5;
function load () {
    map = new GMap2(getByID('geo_map'));
    <TMPL_LOOP NAME=LOCATION_LOOP>
    <TMPL_IF NAME=LOCATION_GEOMETRY>
    marker_<TMPL_VAR NAME=LOCATION_ORD> = new GMarker (new GLatLng (<TMPL_VAR NAME=LOCATION_GEOMETRY>), { title: '<TMPL_VAR NAME=LOCATION_NAME ESCAPE=JS>' });

    map.setCenter (new GLatLng(<TMPL_VAR NAME=LOCATION_GEOMETRY>), <TMPL_VAR NAME=DEFAULT_ZOOM_LEVEL>, <TMPL_VAR NAME=DEFAULT_MAP_TYPE>);    
    map.addOverlay (marker_<TMPL_VAR NAME=LOCATION_ORD>);
    </TMPL_IF>
    </TMPL_LOOP>
    
    <TMPL_IF NAME=MAP_CONTROLS_OVERVIEW>
    map.addControl (new GOverviewMapControl());
    </TMPL_IF>
    <TMPL_IF NAME=MAP_CONTROLS_SCALE>
    map.addControl (new GScaleControl());
    </TMPL_IF>
    <TMPL_IF NAME=MAP_CONTROLS_MAP_TYPE>
    map.addControl (new GMapTypeControl());
    </TMPL_IF>
    
    <TMPL_IF NAME=MAP_CONTROLS_ZOOM_SMALL>
    map.addControl (new GSmallZoomControl());
    </TMPL_IF>
    <TMPL_IF NAME=MAP_CONTROLS_ZOOM_MEDIUM>
    map.addControl (new GSmallMapControl());
    </TMPL_IF>
    <TMPL_IF NAME=MAP_CONTROLS_ZOOM_LARGE>
    map.addControl (new GLargeMapControl());
    </TMPL_IF>
}

function addAddressToMap(id, response) {
    // map.clearOverlays();
    if (!response || response.Status.code != 200) {
        if (response) {
            switch (response.Status.code) {
                case 500:
                    alert ("Request failed for an unknown reason");
                    break;
                case 601:
                    alert ("Request was missing the address field");
                    break;
                case 602:
                    alert ("No corresponding geographic location could be found for the specified address");
                    break;
                case 603:
                    alert ("The geocode for the given address or the route for the given directions query cannot be returned due to legal or contractual reasons");
                    break;
                case 610:
                    alert ("The given key is either invalid or does not match the domain for which it was given");
                    break;
                case 620:
                    alert ("The given key has gone over the requests limit in the 24 hour period");
                    break;
                default:
                    alert ("Unknown failure"); 
            }
        }
        else {
            alert("Sorry, we were unable to geocode that address");            
        }
    } else {
        place = response.Placemark[0];
        point = new GLatLng(place.Point.coordinates[1],
                            place.Point.coordinates[0]);
        map.setCenter (point, <TMPL_VAR NAME=DEFAULT_ZOOM_LEVEL>, <TMPL_VAR NAME=DEFAULT_MAP_TYPE>);
        eval ("map.removeOverlay (marker_" + id + ");marker_" + id + " = new GMarker(point, { title: getByID('geotype_locname_' + id).value });map.addOverlay(marker_" + id +             
            ");marker_" + id + ".openInfoWindowHtml(place.address);");

        getByID('geotype_geometry_' + id).value = place.Point.coordinates[1] + "," + place.Point.coordinates[0];
        getByID('geotype_lat_long_' + id).innerHTML = '';
        getByID('geotype_lat_long_' + id).innerHTML = place.Point.coordinates[1] + ", " + place.Point.coordinates[0];
  }
}

var geocoder;
function geocode (id) {
    if (! geocoder) {
        geocoder = new GClientGeocoder();
    }
    var address = getByID('geotype_addr_' + id).value;
    geocoder.getLocations (address, function (response) { addAddressToMap (id, response) });
}

function load_saved (id) {
    var select = getByID('geotype_select_' + id);
    
    if (select.options[select.selectedIndex].value == "") {
        return;
    }
    
    getByID('geotype_locname_' + id).value = select.options[select.selectedIndex].text;
    getByID('geotype_addr_' + id).value    = select.options[select.selectedIndex].value;
    
    geocode(id);
    
    select.selectedIndex = 0;
}

TC.attachLoadEvent (load);
                </script>
	</div>
</div>